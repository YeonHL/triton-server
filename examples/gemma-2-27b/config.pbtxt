platform: "ensemble"

input [
  {
    name: "text_input"
    data_type: TYPE_STRING
    dims: [ 1 ]
  },
  {
    name: "image"
    data_type: TYPE_STRING
    dims: [ 1 ]
  },
  {
    name: "stream"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  },
  {
    name: "sampling_parameters"
    data_type: TYPE_STRING
    dims: [ 1 ]
  },
  {
    name: "exclude_input_in_output"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  },
  {
    name: "return_finish_reason"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  },
  {
    name: "return_cumulative_logprob"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  },
  {
    name: "return_logprobs"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  },
  {
    name: "return_num_input_tokens"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  },
  {
    name: "return_num_output_tokens"
    data_type: TYPE_BOOL
    dims: [ 1 ]
  }
]

output [
  {
    name: "text_output"
    data_type: TYPE_STRING
    dims: [ 1 ]
  },
  {
    name: "finish_reason"
    data_type: TYPE_STRING
    dims: [ 1 ]
  },
  {
    name: "cumulative_logprob"
    data_type: TYPE_FP32
    dims: [ 1 ]
  },
  {
    name: "logprobs"
    data_type: TYPE_STRING
    dims: [ 1 ]
  },
  {
    name: "num_input_tokens"
    data_type: TYPE_UINT32
    dims: [ 1 ]
  },
  {
    name: "num_output_tokens"
    data_type: TYPE_UINT32
    dims: [ 1 ]
  }
]

ensemble_scheduling {
  step [
    {
      model_name: "gemma-2-27b-preprocess"
      model_version: -1
      input_map {
        key: "text_input"
        value: "text_input"
      }
      input_map {
        key: "image"
        value: "image"
      }
      input_map {
        key: "stream"
        value: "stream"
      }
      input_map {
        key: "sampling_parameters"
        value: "sampling_parameters"
      }
      input_map {
        key: "exclude_input_in_output"
        value: "exclude_input_in_output"
      }
      input_map {
        key: "return_finish_reason"
        value: "return_finish_reason"
      }
      input_map {
        key: "return_cumulative_logprob"
        value: "return_cumulative_logprob"
      }
      input_map {
        key: "return_logprobs"
        value: "return_logprobs"
      }
      input_map {
        key: "return_num_input_tokens"
        value: "return_num_input_tokens"
      }
      input_map {
        key: "return_num_output_tokens"
        value: "return_num_output_tokens"
      }
      output_map {
        key: "text_chat"
        value: "input_chat"
      }
      output_map {
        key: "image"
        value: "original_image"
      }
      output_map {
        key: "stream"
        value: "original_stream"
      }
      output_map {
        key: "sampling_parameters"
        value: "original_sampling_parameters"
      }
      output_map {
        key: "exclude_input_in_output"
        value: "original_exclude_input_in_output"
      }
      output_map {
        key: "return_finish_reason"
        value: "original_return_finish_reason"
      }
      output_map {
        key: "return_cumulative_logprob"
        value: "original_return_cumulative_logprob"
      }
      output_map {
        key: "return_logprobs"
        value: "original_return_logprobs"
      }
      output_map {
        key: "return_num_input_tokens"
        value: "original_return_num_input_tokens"
      }
      output_map {
        key: "return_num_output_tokens"
        value: "original_return_num_output_tokens"
      }
    },
    {
      model_name: "gemma-2-27b-model"
      model_version: -1
      input_map {
        key: "text_input"
        value: "input_chat"
      }
      input_map {
        key: "image"
        value: "original_image"
      }
      input_map {
        key: "stream"
        value: "original_stream"
      }
      input_map {
        key: "sampling_parameters"
        value: "original_sampling_parameters"
      }
      input_map {
        key: "exclude_input_in_output"
        value: "original_exclude_input_in_output"
      }
      input_map {
        key: "return_finish_reason"
        value: "original_return_finish_reason"
      }
      input_map {
        key: "return_cumulative_logprob"
        value: "original_return_cumulative_logprob"
      }
      input_map {
        key: "return_logprobs"
        value: "original_return_logprobs"
      }
      input_map {
        key: "return_num_input_tokens"
        value: "original_return_num_input_tokens"
      }
      input_map {
        key: "return_num_output_tokens"
        value: "original_return_num_output_tokens"
      }
      output_map {
        key: "text_output"
        value: "text_output"
      }
      output_map {
        key: "finish_reason"
        value: "finish_reason"
      }
      output_map {
        key: "cumulative_logprob"
        value: "cumulative_logprob"
      }
      output_map {
        key: "logprobs"
        value: "logprobs"
      }
      output_map {
        key: "num_input_tokens"
        value: "num_input_tokens"
      }
      output_map {
        key: "num_output_tokens"
        value: "num_output_tokens"
      }
    }
  ]
}

version_policy: { latest: { num_versions: 1}}